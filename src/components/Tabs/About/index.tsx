import { motion } from 'framer-motion'
import { useTranslation } from 'react-i18next'
import './style.css'

// tÃ­tulo: Rocket Notes API
// descriÃ§Ã£o Back-end em Node da aplicaÃ§Ã£o Rocket Notes. Abrange fluxo de autenticaÃ§Ã£o e armazenamento em banco de notas, usuÃ¡rios e suas configuraÃ§Ãµes.
// tÃ­tulo: Rocket Notes
// descriÃ§Ã£o Projeto de uma plataforma de anotaÃ§Ãµes, com perfis individuais, manipulaÃ§Ã£o das anotaÃ§Ãµes, etc.
// tÃ­tulo: Pomodoro
// descriÃ§Ã£o Um timer em estilo Pomodoro, com histÃ³rico.
// tÃ­tulo: devstore
// descriÃ§Ã£o Um mini e-commerce de roupas. Projeto atualmente superficial e sem integraÃ§Ã£o de pagamentos.
// tÃ­tulo: Expert Notes
// descriÃ§Ã£o Uma aplicaÃ§Ã£o de manipulaÃ§Ã£o de notas com opÃ§Ã£o de Text-to-Speech.
// tÃ­tulo: Polls API
// descriÃ§Ã£o Back-end de um sistema de enquetes. Permite a votaÃ§Ã£o em opÃ§Ãµes de enquetes e consulta dos votos.
// tÃ­tulo: Ignite Feed
// descriÃ§Ã£o Um projeto de uma rede social, com feed e perfis individuais.
// tÃ­tulo: Ignite Shop
// descriÃ§Ã£o Projeto de um E-Commerce de roupas, com integraÃ§Ã£o ao Stripe, pÃ¡gina de checkout e confirmaÃ§Ã£o de compra.
// tÃ­tulo: DT Money
// descriÃ§Ã£o Um banco de transaÃ§Ãµes, com histÃ³rico de operaÃ§Ãµes.
// tÃ­tulo: Pizza Shop
// descriÃ§Ã£o Uma loja de pizzas virtual, com carrinho e seleÃ§Ã£o de pizzas.
// tÃ­tulo: BMI Calculator
// descriÃ§Ã£o Um calculador de IMC, onde permite o usuÃ¡rio inserir a altura e o peso e indica um resultado com feedback.
// tÃ­tulo: Cardastro
// descriÃ§Ã£o Um painel de cadastro de veÃ­culos, com processo de CRUD completo.
// tÃ­tulo: Dev Memory
// descriÃ§Ã£o Um jogo da memÃ³ria com diferentes cards e sempre com rodadas e posiÃ§Ãµes aleatÃ³rias.
// tÃ­tulo: To-do List
// descriÃ§Ã£o Uma lista em formato "to-do", com suas tarefas. Permite adicionar novas tarefas, marcar atuais como concluÃ­das, etc.
// tÃ­tulo: To-do List 2
// descriÃ§Ã£o Outro projeto de uma lista "to-do" distinto.
// tÃ­tulo: Post List
// descriÃ§Ã£o Uma simples lista de posts, que permite a manipulaÃ§Ã£o dos posts em formato CRUD.
// tÃ­tulo: Train Me
// descriÃ§Ã£o Uma landing page de uma academia.
// tÃ­tulo: Newsletter Form
// descriÃ§Ã£o Um interface com formulÃ¡rio para receber notificaÃ§Ãµes de uma newsletter.
// tÃ­tulo: QR Code Component
// descriÃ§Ã£o Uma simples interface com um QR Code.
// tÃ­tulo: Urna EletrÃ´nica
// descriÃ§Ã£o Uma urna digital falsa.
// tÃ­tulo: Login Panel
// descriÃ§Ã£o Interface de um painel de login (apenas visual).
// tÃ­tulo: RPG Game
// descriÃ§Ã£o Um jogo de RPG local simples.
// tÃ­tulo: Simple Chat
// descriÃ§Ã£o Um chat que permite definir o nome de usuÃ¡rio e enviar mensagens localmente.
// tÃ­tulo: Clime Visualizer
// descriÃ§Ã£o Um visualizador do clima, que usa uma API e permite o usuÃ¡rio inserir o local que deseja ver o clima.
// tÃ­tulo: Tic Tac Toe
// descriÃ§Ã£o Um jogo da velha onde os jogadores podem jogar localmente.
// tÃ­tulo: Canvas Screen
// descriÃ§Ã£o Uma tela de desenho canvas funcional.
// tÃ­tulo: Quiz Game
// descriÃ§Ã£o Um jogo quiz, com perguntas e respostas prÃ©-definidas e com um feedback do resultado no final do jogo.
// tÃ­tulo: Battery Play
// descriÃ§Ã£o Um tocador de bateria funcional, com Ã¡udios, sequÃªncia de sons, ativaÃ§Ã£o por teclado, etc.
// tÃ­tulo: Drag & Drop
// descriÃ§Ã£o Um projeto de drag and drop (arrastar e soltar), que permite arrastar objetos do ponto X para o ponto Y.
// tÃ­tulo: Analogical Watch
// descriÃ§Ã£o Um relÃ³gio analÃ³gico funcional e com ponteiros dinÃ¢micos.

export const About = () => {
  const { t } = useTranslation()

  return (
    <motion.div
      initial={{ opacity: 0, x: -15 }}
      animate={{ opacity: 1, x: 0 }}
      transition={{ duration: 0.4 }}
      style={{ height: '100%', flexDirection: 'column', display: 'flex' }}
    >
      <div className='flex flex-col flex-1'>
        <div className='flex flex-col overflow-hidden flex-1 gap-10 p-2 bg-[url("/assets/circlesBG.png")] text-base lg:gap-20 md:text-lg'>
          <div className='space-y-6'>
            <h1 className='flex gap-2 text-xl font-bold lg:text-2xl'>
              <span className='waving'>ðŸ‘‹</span>
              {t('profile.about.title')}
            </h1>

            <p>
              {t('profile.about.textOne')} <strong>{t('profile.about.strongOne')}</strong>{' '}
              {t('profile.about.textTwo')} <strong>{t('profile.about.strongTwo')}</strong>{' '}
              {t('profile.about.textThree')} <strong>{t('profile.about.strongThree')}</strong>.
            </p>

            <div className='mt-6 space-y-2.5'>
              <h2 className='text-xl font-bold lg:text-2xl'>{t('profile.about.aboutMe')}</h2>

              <div className='space-y-6'>
                <p>
                  {t('profile.about.textFour')} <strong>{t('profile.about.strongFour')}</strong>{' '}
                  {t('profile.about.textFive')} <strong>{t('profile.about.strongFive')}</strong>,{' '}
                  {t('profile.about.textSix')} <strong>{t('profile.about.strongSix')}</strong>{' '}
                  {t('profile.about.textSeven')} <strong>{t('profile.about.strongSeven')}</strong>.{' '}
                  {t('profile.about.textEight')}. {t('profile.about.textEleven')}{' '}
                  <strong>{t('profile.about.strongEleven')}</strong> {t('profile.about.textTwelve')}
                </p>

                <p>
                  {t('profile.about.textThirteen')}{' '}
                  <strong>{t('profile.about.strongThirteen')}</strong>{' '}
                  {t('profile.about.textFourteen')}
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </motion.div>
  )
}
